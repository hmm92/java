/*
 * This file is generated by jOOQ.
 */
package sparkJava.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;

import sparkJava.generated.tables.BookRequest;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRequestRecord extends TableRecordImpl<BookRequestRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = -1395638553;

    /**
     * Setter for <code>public.book_request.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.book_request.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.book_request.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.book_request.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.book_request.first_name</code>.
     */
    public void setFirstName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.book_request.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.book_request.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.book_request.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return BookRequest.BOOK_REQUEST.ID;
    }

    @Override
    public Field<String> field2() {
        return BookRequest.BOOK_REQUEST.TITLE;
    }

    @Override
    public Field<String> field3() {
        return BookRequest.BOOK_REQUEST.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return BookRequest.BOOK_REQUEST.EMAIL;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public BookRequestRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BookRequestRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BookRequestRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public BookRequestRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public BookRequestRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRequestRecord
     */
    public BookRequestRecord() {
        super(BookRequest.BOOK_REQUEST);
    }

    /**
     * Create a detached, initialised BookRequestRecord
     */
    public BookRequestRecord(Integer id, String title, String firstName, String email) {
        super(BookRequest.BOOK_REQUEST);

        set(0, id);
        set(1, title);
        set(2, firstName);
        set(3, email);
    }
}
